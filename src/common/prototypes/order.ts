import { AppState, Order, OrderStatuses } from 'common/types';
import { getTimestamp } from 'common/utils';

export default function NewOrder(state: AppState, order?: Order, ): Order {
  return {
    cardPaymentAmount: 0,
    cashPaymentAmount: 0,
    certPaymentAmount: 0,
    customerId: 0,
    customerLoyaltyType: 0,
    dateClose: 0,
    datePrint: 0,
    dateStart: getTimestamp(),
    dateUpdated: 0,
    discountAmount: 0,
    id: getTimestamp(),
    isDiscounted: false,
    isTipIncluded: false,
    items: [],
    notes: '',
    orderName: Math.max(...state.orders.map(order => order.orderName), 0) + 1,
    parentId: 0,
    paymentMethodId: 0,
    rewardEarnedAmount: 0,
    rewardPaymentAmount: 0,
    status: OrderStatuses.Open,
    subTotalAmount: 0,
    subTotalRoundedAmount: 0,
    tableId: state.currentTableId,
    taxAmount: 0,
    taxRoundedAmount: 0,
    tipsAmount: 0,
    tipsCard: 0,
    tipsCash: 0,
    totalAmount: 0,
    totalPaymentAmount: 0,
    totalRoundedAmount: 0,
    userId: state.currentUserId,
    appliedTaxes: [],
  };
}
